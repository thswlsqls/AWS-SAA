아래는 Udemy의 Ultimate AWS Certified Solutions Architect Associate SAA-C03 강의내용 중 Section 7

55 - 68강을 요약한 내용입니다.(Section 7. EC2 Instance Storage)



1. EBS Volumn

1.1. 인스턴스가 실행 중인 동안 부착할 수 있는 네트워크 드라이브

1.1.1. 물리적 드라이브가 아님

1.1.2. 네트워트 상에서 약간의 지연이 있을 수 있음

1.2. 인스턴스가 종료된 후에도 데이터들을 유지

1.3. 한번에 한 인스턴스에만 마운트됨

1.4. 특정 AZ 내로 바운드됨

1.4.1. 다른 AZ으로 EBS 볼륨을 옮기려면, 먼저 스냅샷을 찍어야 함

1.5. 네트워크 USB 스틱과 같음

1.6. 프리티어에서는 일반 목적 타입의 EBS 스토리지를 30GB까지 무료로 사용 가능

1.6.1. 사용한 용량만큼 비용이 청구되고 시간이 지남에 따라 용량을 늘릴 수 있음



2. EBS - Delete on Termination attribute

2.1. EC2 인스턴스가 종료되었을 때, EBS 볼륨의 동작을 정의

2.1.1. 기본값으로 루트 EBS 볼륨은 삭제됨

2.1.2. 기본값으로 루트 볼륨 외 EBS 볼륨들은 삭제되지 않음

2.2. AWS 콘솔과 AWS CLI에서 제어가능



3. EBS Snapshots

3.1. 특정 시점에 EBS 볼륨의 백업을 생성

3.2. 스냅샷을 생성하기 위해 필수는 아니지만, 볼륨을 분리하는 것이 추천됨

3.3. AZ 또는 리전을 가로질러 스냅샷을 복사할 수 있음



4. EBS Snapshots Features

4.1. EBS Snapshot Archive

4.1.1. 75% 더 저렴한 아카이브 티어로 스냅샷을 옮김

4.1.2. 아카이브 복구를 위해 24 - 72 시간을 소요



4.2. Recycle Bin for EBS Snapshots

4.2.1. 실수로 삭제하는 것을 방지하기 규칙을 셋업하고 이후 복구 가능

4.2.2. 1일부터 1년까지 보유기간을 구체화



4.3. Fast Snapshot Restore (FSR)

4.3.1. 첫 사용에 대한 지연이 없도록 스냅샷의 초기화 전체를 강제



5. AMI Overview

5.1. AMI = Amazon Machine Image

5.2. EC2 인스턴스를 커스터마이징 하고 이미지로 저장

5.3. 특정 리전에 대해서 빌드됨

5.4. AWS에서 제공하는 퍼블릭 AMI, 사용자가 생성한 AMI, AWS 마켓플레이스에 누군가 올려놓은 AMI등으로부터 EC2 인스턴스를 런치할 수 있음



6. AMI Process (from an EC2 instance)

6.1. EC2 인스턴스를 시작하고 커스터마이징

6.2. 인스턴스를 중지

6.3. AMI를 빌드 - EBS 스냅샷 생성

6.4. 인스턴스를 AMI 으로부터 런치



7. EC2 Instance Store

7.1. EBS 볼륨은 좋은 네트워크 드라이브이지만 제한된 성능을 가짐

7.2. EC2 Instance Store는 고성능 하드웨어 디스크임

7.3. EBS보다 나은 입출력 성능

7.4. EC2 Instance Store는 인스턴스가 중지되면 그 스토리지를 잃음

7.5. 하드웨어 고장 시 데이터 유실 위험



8. EBS Volume Types

Note. gp2/gp3 와 io1/io2 타입의 볼륨만 루트 볼륨으로 사용될 수 있음

8.1. General Purpose SSD

8.1.1. 비용 효율적이고 저지연

8.1.2. 시스템 부트볼륨, 가상 데스크탑, 개발과 테스트 환경에 사용

8.1.3. gp3, gp2



8.2. Provisioned IOPS SSD

8.2.1. 지속적인 IOPS 성능을 요하는 주요 비지니스 앱에 사용하거나 16,000 IOPS 이상을 필요로 하는 앱에 사용

8.2.2. 데이터베이스 워크로드에 좋음

8.2.3. io1/io2 , io Block Express

8.2.4. EBS Multi-attach를 지원



8.3. Hard Disk Drives (HDD)

8.3.1. 부트 볼륨이 될 수 없음

8.3.2. st1, sc1



9. EBS Multi-Attach - io1/io2 family

9.1. 같은 EBS 볼륨을 같은 AZ내의 다수의 EC2 인스턴스에 부착

9.2. 각각의 인스턴스는 고성능 볼륨에 대해 읽기-쓰기 권한을 가짐

9.3. 클러스터링된 리눅스 앱에서 고가용성을 달성하기 위해 사용

9.4. 한번에 인스턴스 16개까지 가능



10. EBS Encryption

10.1. 볼륨내부의 데이터들, 옮겨지는 중인 데이터들이 암호화됨

10.2. 모든 스냅샷들은 암호화되고 스냅샷에서 생성한 모든 볼륨들도 암호화됨

10.3. EBS 암호화는 KMS로부터 키를 활용함

10.4. 암호화된 스냅샷의 볼륨들은 암호화됨

10.5.  암호화되지 않은 EBS 볼륨을 암호화하려면, 스냅샷을 생성하고 암호화한 후에 스냅샷으로부터 볼륨을 생성



11. Amazon EFS - Elastic File System

11.1. 다수의 EC2에 마운트 될 수 있는 네트워크 파일 시스템(NFS)

11.2. 다수의 AZ에서 작동함

11.3. 고가용성, 확장성, 각 사용마다 비용을 지불

11.4. 콘텐츠 관리, 웹서빙, 데이터 쉐어링, 워드프레스 등에 사용

11.5. 보안 그룹을 사용해 EFS에 대한 접근을 제어

11.6. 윈도우가 아니라 리눅스 기반 AMI에 규정 준수

11.7. KMS를 사용해 암호화

11.8. 자동으로 스케일링하고 용량 계획은 없이 각 사용마다 비용을 지불함

11.9. AZ를 가로질러 100개의 인스턴스를 마운팅 가능

11.10. EBS보다 더 높은 가격